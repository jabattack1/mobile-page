{"ast":null,"code":"var _jsxFileName = \"/Users/peter/src/new/mobile-page/mobileApp/src/phone/phone-container.react.js\";\nimport React from 'react';\nimport phoneActionsCreators from './phone-actions-creators';\n\nvar createReactClass = require('create-react-class');\n\nconst PhoneContainer = createReactClass({\n  displayName: \"PhoneContainer\",\n\n  render() {\n    require('./phone.scss');\n\n    return React.createElement(\"div\", {\n      className: \"cards-grid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"hotel-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"hotel-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, this.props.hotelName)));\n  },\n\n  _renderMessages() {\n    if (this.props.messageList.length === 0) {\n      return React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, \"No messages\");\n    } // else {\n    // \treturn this.props.messageList.map(message => {\n    // \t\treturn <div className=\"message\" key={message.id}>{message.content}</div>\n    // \t});\n    // }\n    else {\n        return this.props.messageList.map(function (message) {\n          console.log('message');\n          console.log(message);\n          return React.createElement(\"div\", {\n            key: message.id,\n            className: \"message\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 39\n            },\n            __self: this\n          }, message.content);\n        });\n      }\n  },\n\n  _handleChange(event) {\n    phoneActionsCreators.changeNewMessage(event.target.value); // this.setState({\n    // \tnewMessage: event.target.value\n    // });\n  },\n\n  _submitMessage() {\n    phoneActionsCreators.submitNewMessage(); // if (this.props.newMessage.trim().length > 0) {\n    // \tlet message = {\n    // \t\tid: Date.now(),\n    // \t\tcontent: this.props.newMessage\n    // \t};\n    // \tthis.props.messageList.push(message);\n    // \tthis.setState({\n    // \t\tmessageList: this.props.messageList,\n    // \t\tnewMessage: ''\n    // \t});\n    // }\n  },\n\n  _checkKeyPress(event) {\n    if (event.key === 'Enter') {\n      this._submitMessage();\n    }\n  },\n\n  _focus(inputDomElement) {\n    inputDomElement.focus();\n  },\n\n  componentDidUpdate() {\n    this.refs.messagesDiv.scrollTop = this.refs.messagesDiv.scrollHeight;\n  },\n\n  _renderMessageCount() {\n    return React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Message count: \", this.props.messageList.length);\n  }\n\n});\nexport default PhoneContainer;","map":{"version":3,"sources":["/Users/peter/src/new/mobile-page/mobileApp/src/phone/phone-container.react.js"],"names":["React","phoneActionsCreators","createReactClass","require","PhoneContainer","render","props","hotelName","_renderMessages","messageList","length","map","message","console","log","id","content","_handleChange","event","changeNewMessage","target","value","_submitMessage","submitNewMessage","_checkKeyPress","key","_focus","inputDomElement","focus","componentDidUpdate","refs","messagesDiv","scrollTop","scrollHeight","_renderMessageCount"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,oBAAP,MAAiC,0BAAjC;;AAEA,IAAIC,gBAAgB,GAAGC,OAAO,CAAC,oBAAD,CAA9B;;AAIA,MAAMC,cAAc,GAAGF,gBAAgB,CAAC;AAAA;;AAEvCG,EAAAA,MAAM,GAAG;AAERF,IAAAA,OAAO,CAAC,cAAD,CAAP;;AAEA,WACC;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,KAAKG,KAAL,CAAWC,SADb,CADD,CADD,CADD;AASA,GAfsC;;AAkBvCC,EAAAA,eAAe,GAAG;AACjB,QAAI,KAAKF,KAAL,CAAWG,WAAX,CAAuBC,MAAvB,KAAkC,CAAtC,EAAyC;AACxC,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAP;AACA,KAFD,CAGA;AACA;AACA;AACA;AACA;AAPA,SAQI;AACH,eAAO,KAAKJ,KAAL,CAAWG,WAAX,CAAuBE,GAAvB,CAA2B,UAASC,OAAT,EAAiB;AAClDC,UAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAD,UAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACA,iBAAO;AAAK,YAAA,GAAG,EAAEA,OAAO,CAACG,EAAlB;AAAsB,YAAA,SAAS,EAAC,SAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA2CH,OAAO,CAACI,OAAnD,CAAP;AACA,SAJM,CAAP;AAKA;AACD,GAlCsC;;AAoCvCC,EAAAA,aAAa,CAACC,KAAD,EAAQ;AACpBjB,IAAAA,oBAAoB,CAACkB,gBAArB,CAAsCD,KAAK,CAACE,MAAN,CAAaC,KAAnD,EADoB,CAEpB;AACA;AACA;AACA,GAzCsC;;AA2CvCC,EAAAA,cAAc,GAAG;AAChBrB,IAAAA,oBAAoB,CAACsB,gBAArB,GADgB,CAGhB;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA,GA3DsC;;AA6DvCC,EAAAA,cAAc,CAACN,KAAD,EAAQ;AACrB,QAAIA,KAAK,CAACO,GAAN,KAAc,OAAlB,EAA2B;AAC1B,WAAKH,cAAL;AACA;AACD,GAjEsC;;AAmEvCI,EAAAA,MAAM,CAACC,eAAD,EAAkB;AACvBA,IAAAA,eAAe,CAACC,KAAhB;AACA,GArEsC;;AAuEvCC,EAAAA,kBAAkB,GAAG;AACpB,SAAKC,IAAL,CAAUC,WAAV,CAAsBC,SAAtB,GAAkC,KAAKF,IAAL,CAAUC,WAAV,CAAsBE,YAAxD;AACA,GAzEsC;;AA2EvCC,EAAAA,mBAAmB,GAAG;AACrB,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAsB,KAAK5B,KAAL,CAAWG,WAAX,CAAuBC,MAA7C,CAAP;AACA;;AA7EsC,CAAD,CAAvC;AAgFA,eAAeN,cAAf","sourcesContent":["import React from 'react';\nimport phoneActionsCreators from './phone-actions-creators';\n\nvar createReactClass = require('create-react-class');\n\n\n\nconst PhoneContainer = createReactClass({\n\n\trender() {\n\n\t\trequire('./phone.scss');\n\n\t\treturn (\n\t\t\t<div className='cards-grid'>\n\t\t\t\t<div className=\"hotel-container\">\n\t\t\t\t\t<div className=\"hotel-info\">\n\t\t\t\t\t\t{this.props.hotelName}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t},\n\n\n\t_renderMessages() {\n\t\tif (this.props.messageList.length === 0) {\n\t\t\treturn <span>No messages</span>;\n\t\t}\n\t\t// else {\n\t\t// \treturn this.props.messageList.map(message => {\n\t\t// \t\treturn <div className=\"message\" key={message.id}>{message.content}</div>\n\t\t// \t});\n\t\t// }\n\t\telse{\n\t\t\treturn this.props.messageList.map(function(message){\n\t\t\t\tconsole.log('message');\n\t\t\t\tconsole.log(message);\n\t\t\t\treturn <div key={message.id} className='message'>{message.content}</div>\n\t\t\t});\n\t\t}\n\t},\n\n\t_handleChange(event) {\n\t\tphoneActionsCreators.changeNewMessage(event.target.value);\n\t\t// this.setState({\n\t\t// \tnewMessage: event.target.value\n\t\t// });\n\t},\n\n\t_submitMessage() {\n\t\tphoneActionsCreators.submitNewMessage();\n\n\t\t// if (this.props.newMessage.trim().length > 0) {\n\t\t// \tlet message = {\n\t\t// \t\tid: Date.now(),\n\t\t// \t\tcontent: this.props.newMessage\n\t\t// \t};\n\n\t\t// \tthis.props.messageList.push(message);\n\n\t\t// \tthis.setState({\n\t\t// \t\tmessageList: this.props.messageList,\n\t\t// \t\tnewMessage: ''\n\t\t// \t});\n\t\t// }\n\t},\n\n\t_checkKeyPress(event) {\n\t\tif (event.key === 'Enter') {\n\t\t\tthis._submitMessage();\n\t\t}\n\t},\n\n\t_focus(inputDomElement) {\n\t\tinputDomElement.focus();\n\t},\n\n\tcomponentDidUpdate() {\n\t\tthis.refs.messagesDiv.scrollTop = this.refs.messagesDiv.scrollHeight;\n\t},\n\n\t_renderMessageCount() {\n\t\treturn <span>Message count: {this.props.messageList.length}</span>\n\t}\n});\n\nexport default PhoneContainer;\n"]},"metadata":{},"sourceType":"module"}