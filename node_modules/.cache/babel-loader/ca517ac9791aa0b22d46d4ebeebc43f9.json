{"ast":null,"code":"import dispatcher from './phone-dispatcher';\nimport { EventEmitter } from 'events';\nconst chatStoreChangeEvent = 'hone-store-change-event';\n\nclass PhoneStore extends EventEmitter {\n  constructor() {\n    super();\n    dispatcher.register(this.handleAction.bind(this));\n    this._hotelName = [{\n      id: 1,\n      content: 'Hilton Chicago'\n    }];\n    this._hotelAddress = [{\n      id: 1,\n      content: '720 South Michigan Avenue'\n    }];\n    this._hotelCity = [{\n      id: 1,\n      content: 'Chicago'\n    }];\n    this._hotelState = [{\n      id: 1,\n      content: 'Illinois'\n    }];\n    this._hotelZip = [{\n      id: 1,\n      content: '60605'\n    }];\n  }\n\n  get newMessage() {\n    return this._newMessage;\n  }\n\n  get messageList() {\n    return this._messageList;\n  }\n\n  handleAction(action) {}\n\n  _checkSubmitNewMessage() {\n    if (this._newMessage.trim().length > 0) {\n      let message = {\n        id: Date.now(),\n        content: this._newMessage\n      };\n\n      this._messageList.push(message);\n\n      this._newMessage = ''; // this.setState({\n      // \tmessageList: this.props.messageList,\n      // \tnewMessage: ''\n      // });\n    }\n  }\n\n  emitChange() {\n    this.emit(chatStoreChangeEvent);\n  }\n\n  addEventListener(callback) {\n    this.on('chat-store-change-event', callback);\n  }\n\n  removeEventListner(callback) {\n    this.removeListener(chatStoreChangeEvent, callback);\n  }\n\n}\n\nlet phoneStore = new PhoneStore();\nexport default phoneStore;","map":{"version":3,"sources":["/Users/peter/src/new/mobile-page/mobileApp/src/phone/phone-store.js"],"names":["dispatcher","EventEmitter","chatStoreChangeEvent","PhoneStore","constructor","register","handleAction","bind","_hotelName","id","content","_hotelAddress","_hotelCity","_hotelState","_hotelZip","newMessage","_newMessage","messageList","_messageList","action","_checkSubmitNewMessage","trim","length","message","Date","now","push","emitChange","emit","addEventListener","callback","on","removeEventListner","removeListener","phoneStore"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,oBAAvB;AACA,SAAQC,YAAR,QAA2B,QAA3B;AAEA,MAAMC,oBAAoB,GAAG,yBAA7B;;AAEA,MAAMC,UAAN,SAAyBF,YAAzB,CAAsC;AAEpCG,EAAAA,WAAW,GAAE;AACZ;AAEAJ,IAAAA,UAAU,CAACK,QAAX,CAAoB,KAAKC,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AAGA,SAAKC,UAAL,GAAkB,CAAC;AAACC,MAAAA,EAAE,EAAC,CAAJ;AAAOC,MAAAA,OAAO,EAAC;AAAf,KAAD,CAAlB;AACA,SAAKC,aAAL,GAAqB,CAAC;AAACF,MAAAA,EAAE,EAAC,CAAJ;AAAOC,MAAAA,OAAO,EAAC;AAAf,KAAD,CAArB;AACA,SAAKE,UAAL,GAAkB,CAAC;AAACH,MAAAA,EAAE,EAAC,CAAJ;AAAOC,MAAAA,OAAO,EAAC;AAAf,KAAD,CAAlB;AACA,SAAKG,WAAL,GAAmB,CAAC;AAACJ,MAAAA,EAAE,EAAC,CAAJ;AAAOC,MAAAA,OAAO,EAAC;AAAf,KAAD,CAAnB;AACA,SAAKI,SAAL,GAAiB,CAAC;AAACL,MAAAA,EAAE,EAAC,CAAJ;AAAOC,MAAAA,OAAO,EAAC;AAAf,KAAD,CAAjB;AAEA;;AAED,MAAIK,UAAJ,GAAgB;AACf,WAAO,KAAKC,WAAZ;AACA;;AAED,MAAIC,WAAJ,GAAiB;AAChB,WAAO,KAAKC,YAAZ;AACA;;AAEDZ,EAAAA,YAAY,CAACa,MAAD,EAAQ,CACnB;;AAEDC,EAAAA,sBAAsB,GAAE;AACvB,QAAI,KAAKJ,WAAL,CAAiBK,IAAjB,GAAwBC,MAAxB,GAAiC,CAArC,EAAwC;AACxC,UAAIC,OAAO,GAAG;AACbd,QAAAA,EAAE,EAAEe,IAAI,CAACC,GAAL,EADS;AAEbf,QAAAA,OAAO,EAAE,KAAKM;AAFD,OAAd;;AAKA,WAAKE,YAAL,CAAkBQ,IAAlB,CAAuBH,OAAvB;;AACA,WAAKP,WAAL,GAAmB,EAAnB,CAPwC,CASxC;AACA;AACA;AACA;AACA;AACA;;AAEDW,EAAAA,UAAU,GAAE;AACX,SAAKC,IAAL,CAAU1B,oBAAV;AACA;;AAED2B,EAAAA,gBAAgB,CAACC,QAAD,EAAU;AACzB,SAAKC,EAAL,CAAQ,yBAAR,EAAmCD,QAAnC;AACA;;AAEDE,EAAAA,kBAAkB,CAACF,QAAD,EAAU;AAC3B,SAAKG,cAAL,CAAoB/B,oBAApB,EAA0C4B,QAA1C;AACA;;AAtDmC;;AA0DtC,IAAII,UAAU,GAAG,IAAI/B,UAAJ,EAAjB;AAEA,eAAe+B,UAAf","sourcesContent":["import dispatcher from './phone-dispatcher';\nimport {EventEmitter} from 'events';\n\nconst chatStoreChangeEvent = 'hone-store-change-event';\n\nclass PhoneStore extends EventEmitter {\n\n \tconstructor(){\n \t\tsuper();\n\n \t\tdispatcher.register(this.handleAction.bind(this));\n\n\n \t\tthis._hotelName = [{id:1, content:'Hilton Chicago'}];\n \t\tthis._hotelAddress = [{id:1, content:'720 South Michigan Avenue'}];\n \t\tthis._hotelCity = [{id:1, content:'Chicago'}];\n \t\tthis._hotelState = [{id:1, content:'Illinois'}];\n \t\tthis._hotelZip = [{id:1, content:'60605'}];\n\n \t}\n\n \tget newMessage(){\n \t\treturn this._newMessage;\n \t}\n\n \tget messageList(){\n \t\treturn this._messageList;\n \t}\n\n \thandleAction(action){\n \t}\n\n \t_checkSubmitNewMessage(){\n \t\tif (this._newMessage.trim().length > 0) {\n\t\t\tlet message = {\n\t\t\t\tid: Date.now(),\n\t\t\t\tcontent: this._newMessage\n\t\t\t};\n\n\t\t\tthis._messageList.push(message);\n\t\t\tthis._newMessage = '';\n\n\t\t\t// this.setState({\n\t\t\t// \tmessageList: this.props.messageList,\n\t\t\t// \tnewMessage: ''\n\t\t\t// });\n\t\t}\n \t}\n\n \temitChange(){\n \t\tthis.emit(chatStoreChangeEvent);\n \t}\n\n \taddEventListener(callback){\n \t\tthis.on('chat-store-change-event', callback);\n \t}\n\n \tremoveEventListner(callback){\n \t\tthis.removeListener(chatStoreChangeEvent, callback);\n \t}\n\n}\n\nlet phoneStore = new PhoneStore();\n\nexport default phoneStore;\n"]},"metadata":{},"sourceType":"module"}