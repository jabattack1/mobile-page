{"ast":null,"code":"var _jsxFileName = \"/Users/peter/src/new/mobile-page/mobileApp/src/phone/phone-container.react.js\";\nimport React from 'react';\nimport phoneActionsCreators from './phone-actions-creators';\n\nvar createReactClass = require('create-react-class');\n\nconst PhoneContainer = createReactClass({\n  displayName: \"PhoneContainer\",\n\n  // getInitialState() {\n  // \treturn {\n  // \t\tmessageList: []\n  // \t};\n  // },\n  render() {\n    require('./phone.scss');\n\n    return React.createElement(\"div\", {\n      className: \"chat-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"messages\",\n      ref: \"messagesDiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, this._renderMessages()), React.createElement(\"div\", {\n      className: \"message-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Type here\",\n      value: this.props.newMessage,\n      onChange: this._handleChange,\n      onKeyPress: this._checkKeyPress,\n      ref: this._focus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"message-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this._submitMessage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"Submit\")), \"// \", React.createElement(\"div\", {\n      className: \"count\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"//  \", this._renderMessageCount(), \"// \"));\n  },\n\n  _renderMessages() {\n    if (this.props.messageList.length === 0) {\n      return React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"No messages\");\n    } // else {\n    // \treturn this.props.messageList.map(message => {\n    // \t\treturn <div className=\"message\" key={message.id}>{message.content}</div>\n    // \t});\n    // }\n    else {\n        return this.props.messageList.map(function (message) {\n          console.log('message');\n          console.log(message);\n          return React.createElement(\"div\", {\n            key: message.id,\n            className: \"message\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 58\n            },\n            __self: this\n          }, message.content);\n        });\n      }\n  },\n\n  _handleChange(event) {\n    phoneActionsCreators.changeNewMessage(event.target.value); // this.setState({\n    // \tnewMessage: event.target.value\n    // });\n  },\n\n  _submitMessage() {\n    phoneActionsCreators.submitNewMessage(); // if (this.props.newMessage.trim().length > 0) {\n    // \tlet message = {\n    // \t\tid: Date.now(),\n    // \t\tcontent: this.props.newMessage\n    // \t};\n    // \tthis.props.messageList.push(message);\n    // \tthis.setState({\n    // \t\tmessageList: this.props.messageList,\n    // \t\tnewMessage: ''\n    // \t});\n    // }\n  },\n\n  _checkKeyPress(event) {\n    if (event.key === 'Enter') {\n      this._submitMessage();\n    }\n  },\n\n  _focus(inputDomElement) {\n    inputDomElement.focus();\n  },\n\n  componentDidUpdate() {\n    this.refs.messagesDiv.scrollTop = this.refs.messagesDiv.scrollHeight;\n  },\n\n  _renderMessageCount() {\n    return React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Message count: \", this.props.messageList.length);\n  }\n\n});\nexport default PhoneContainer;","map":{"version":3,"sources":["/Users/peter/src/new/mobile-page/mobileApp/src/phone/phone-container.react.js"],"names":["React","phoneActionsCreators","createReactClass","require","PhoneContainer","render","_renderMessages","props","newMessage","_handleChange","_checkKeyPress","_focus","_submitMessage","_renderMessageCount","messageList","length","map","message","console","log","id","content","event","changeNewMessage","target","value","submitNewMessage","key","inputDomElement","focus","componentDidUpdate","refs","messagesDiv","scrollTop","scrollHeight"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,oBAAP,MAAiC,0BAAjC;;AAEA,IAAIC,gBAAgB,GAAGC,OAAO,CAAC,oBAAD,CAA9B;;AAIA,MAAMC,cAAc,GAAGF,gBAAgB,CAAC;AAAA;;AAEvC;AACA;AACA;AACA;AACA;AAEAG,EAAAA,MAAM,GAAG;AAERF,IAAAA,OAAO,CAAC,cAAD,CAAP;;AAEA,WACC;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAK,MAAA,SAAS,EAAC,UAAf;AAA0B,MAAA,GAAG,EAAC,aAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,KAAKG,eAAL,EADF,CADD,EAIC;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AACC,MAAA,IAAI,EAAC,MADN;AAEC,MAAA,WAAW,EAAC,WAFb;AAGC,MAAA,KAAK,EAAE,KAAKC,KAAL,CAAWC,UAHnB;AAIC,MAAA,QAAQ,EAAE,KAAKC,aAJhB;AAKC,MAAA,UAAU,EAAE,KAAKC,cALlB;AAMC,MAAA,GAAG,EAAE,KAAKC,MANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CAJD,EAaC;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAQ,MAAA,OAAO,EAAE,KAAKC,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,CAbD,SAgBI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACE,KAAKC,mBAAL,EADF,QAhBJ,CADD;AAsBA,GAlCsC;;AAqCvCP,EAAAA,eAAe,GAAG;AACjB,QAAI,KAAKC,KAAL,CAAWO,WAAX,CAAuBC,MAAvB,KAAkC,CAAtC,EAAyC;AACxC,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAP;AACA,KAFD,CAGA;AACA;AACA;AACA;AACA;AAPA,SAQI;AACH,eAAO,KAAKR,KAAL,CAAWO,WAAX,CAAuBE,GAAvB,CAA2B,UAASC,OAAT,EAAiB;AAClDC,UAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAD,UAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACA,iBAAO;AAAK,YAAA,GAAG,EAAEA,OAAO,CAACG,EAAlB;AAAsB,YAAA,SAAS,EAAC,SAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA2CH,OAAO,CAACI,OAAnD,CAAP;AACA,SAJM,CAAP;AAKA;AACD,GArDsC;;AAuDvCZ,EAAAA,aAAa,CAACa,KAAD,EAAQ;AACpBrB,IAAAA,oBAAoB,CAACsB,gBAArB,CAAsCD,KAAK,CAACE,MAAN,CAAaC,KAAnD,EADoB,CAEpB;AACA;AACA;AACA,GA5DsC;;AA8DvCb,EAAAA,cAAc,GAAG;AAChBX,IAAAA,oBAAoB,CAACyB,gBAArB,GADgB,CAGhB;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA,GA9EsC;;AAgFvChB,EAAAA,cAAc,CAACY,KAAD,EAAQ;AACrB,QAAIA,KAAK,CAACK,GAAN,KAAc,OAAlB,EAA2B;AAC1B,WAAKf,cAAL;AACA;AACD,GApFsC;;AAsFvCD,EAAAA,MAAM,CAACiB,eAAD,EAAkB;AACvBA,IAAAA,eAAe,CAACC,KAAhB;AACA,GAxFsC;;AA0FvCC,EAAAA,kBAAkB,GAAG;AACpB,SAAKC,IAAL,CAAUC,WAAV,CAAsBC,SAAtB,GAAkC,KAAKF,IAAL,CAAUC,WAAV,CAAsBE,YAAxD;AACA,GA5FsC;;AA8FvCrB,EAAAA,mBAAmB,GAAG;AACrB,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAsB,KAAKN,KAAL,CAAWO,WAAX,CAAuBC,MAA7C,CAAP;AACA;;AAhGsC,CAAD,CAAvC;AAmGA,eAAeX,cAAf","sourcesContent":["import React from 'react';\nimport phoneActionsCreators from './phone-actions-creators';\n\nvar createReactClass = require('create-react-class');\n\n\n\nconst PhoneContainer = createReactClass({\n\n\t// getInitialState() {\n\t// \treturn {\n\t// \t\tmessageList: []\n\t// \t};\n\t// },\n\n\trender() {\n\n\t\trequire('./phone.scss');\n\n\t\treturn (\n\t\t\t<div className=\"chat-container\">\n\t\t\t\t<div className=\"messages\" ref=\"messagesDiv\">\n\t\t\t\t\t{this._renderMessages()}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"message-input\">\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tplaceholder=\"Type here\"\n\t\t\t\t\t\tvalue={this.props.newMessage}\n\t\t\t\t\t\tonChange={this._handleChange}\n\t\t\t\t\t\tonKeyPress={this._checkKeyPress}\n\t\t\t\t\t\tref={this._focus}/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"message-button\">\n\t\t\t\t\t<button onClick={this._submitMessage}>Submit</button>\n\t\t\t\t</div>\n\t\t\t\t// <div className=\"count\">\n\t\t\t\t// \t{this._renderMessageCount()}\n\t\t\t\t// </div>\n\t\t\t</div>\n\t\t);\n\t},\n\n\n\t_renderMessages() {\n\t\tif (this.props.messageList.length === 0) {\n\t\t\treturn <span>No messages</span>;\n\t\t}\n\t\t// else {\n\t\t// \treturn this.props.messageList.map(message => {\n\t\t// \t\treturn <div className=\"message\" key={message.id}>{message.content}</div>\n\t\t// \t});\n\t\t// }\n\t\telse{\n\t\t\treturn this.props.messageList.map(function(message){\n\t\t\t\tconsole.log('message');\n\t\t\t\tconsole.log(message);\n\t\t\t\treturn <div key={message.id} className='message'>{message.content}</div>\n\t\t\t});\n\t\t}\n\t},\n\n\t_handleChange(event) {\n\t\tphoneActionsCreators.changeNewMessage(event.target.value);\n\t\t// this.setState({\n\t\t// \tnewMessage: event.target.value\n\t\t// });\n\t},\n\n\t_submitMessage() {\n\t\tphoneActionsCreators.submitNewMessage();\n\n\t\t// if (this.props.newMessage.trim().length > 0) {\n\t\t// \tlet message = {\n\t\t// \t\tid: Date.now(),\n\t\t// \t\tcontent: this.props.newMessage\n\t\t// \t};\n\n\t\t// \tthis.props.messageList.push(message);\n\n\t\t// \tthis.setState({\n\t\t// \t\tmessageList: this.props.messageList,\n\t\t// \t\tnewMessage: ''\n\t\t// \t});\n\t\t// }\n\t},\n\n\t_checkKeyPress(event) {\n\t\tif (event.key === 'Enter') {\n\t\t\tthis._submitMessage();\n\t\t}\n\t},\n\n\t_focus(inputDomElement) {\n\t\tinputDomElement.focus();\n\t},\n\n\tcomponentDidUpdate() {\n\t\tthis.refs.messagesDiv.scrollTop = this.refs.messagesDiv.scrollHeight;\n\t},\n\n\t_renderMessageCount() {\n\t\treturn <span>Message count: {this.props.messageList.length}</span>\n\t}\n});\n\nexport default PhoneContainer\n"]},"metadata":{},"sourceType":"module"}